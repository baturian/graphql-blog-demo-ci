name: deploy

on:
  push:
    branches:
       - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Build frontend part of the app
    runs-on: ubuntu-20.04
    container:
      image: node:14.17-alpine
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts
      - name: Generate prisma and nexus
        run: "npm run generate:prisma"
      - name: Build
        run: npm run build
        env:
          BACKEND_VERSION: ${{ github.sha }}
          NEXT_PUBLIC_FRONTEND_VERSION: ${{ github.sha }}
          PUBLIC_HOST: ${{ secrets.PUBLIC_HOST }}
          DB_USER_NAME: ${{ secrets.DB_USER_NAME }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER_PASSWORD: ${{ secrets.DB_USER_PASSWORD }}
#          DATABASE_URL: ${{ 'mysql://$DB_USER_NAME:$DB_USER_PASSWORD@localhost:3306/$DB_NAME' }}
      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .next
            package.json
            package-lock.json
  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Copy files to the server
        # заливаем файлы при помощи rsync
        run: |
          rsync -a --progress --human-readable --delete \
          --exclude-from '.gitignore' \
          --exclude .gitignore \
          --exclude .git \
          . deploy@18.156.205.253:~/ci-app/
      - name: Restart the application
        run: |
          ssh deploy@18.156.205.253 "pushd ~/ci-app && npm install --production && popd && pm2 restart ecosystem.config.js --env production"
